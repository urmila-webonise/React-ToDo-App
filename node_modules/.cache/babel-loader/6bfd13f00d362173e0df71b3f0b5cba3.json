{"ast":null,"code":"var _jsxFileName = \"/home/webonise/projects/assignments/React-ToDo-App/src/components/todo/todoform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ListTask from \"./ListTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = () => {\n  _s();\n\n  const [task, setTask] = useState({});\n  const [taskList, setTaskList] = useState([]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTask({ ...task,\n      [name]: value\n    });\n  };\n\n  const handleRemove = item => {\n    const updatedTasks = taskList.filter(task => task !== item);\n    setTaskList(updatedTasks);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!task.name) return;\n    setTask(\"\");\n    setTaskList([...taskList, { ...task\n    }]);\n  };\n\n  useEffect(() => {\n    const ulist = JSON.parse(localStorage.getItem(\"users\"));\n    if (Array.isArray(ulist)) setTaskList(ulist);\n  }, []);\n  useEffect(() => {\n    if (taskList.length > 0) localStorage.setItem(\"users\", JSON.stringify(taskList));\n  }, [taskList]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      margin: \"auto\",\n      width: \"900px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"My Tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      required: \"\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        backgroundColor: \"green\",\n        fontSize: \"20px\",\n        margin: \"20px\",\n        padding: \"10px\"\n      },\n      children: \"Add TODO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListTask, {\n      items: taskList,\n      handleRemove: handleRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoForm, \"369FWqY1GYS0tRdCl7imR6I8fcM=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/webonise/projects/assignments/React-ToDo-App/src/components/todo/todoform.js"],"names":["React","useEffect","useState","ListTask","TodoForm","task","setTask","taskList","setTaskList","handleChange","e","name","value","target","handleRemove","item","updatedTasks","filter","handleSubmit","preventDefault","ulist","JSON","parse","localStorage","getItem","Array","isArray","length","setItem","stringify","margin","width","backgroundColor","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListTask from \"./ListTask\";\n\nconst TodoForm = () => {\n  const [task, setTask] = useState({});\n  const [taskList, setTaskList] = useState([]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setTask({ ...task, [name]: value });\n  };\n  const handleRemove = (item) => {\n    const updatedTasks = taskList.filter((task) => task !== item);\n    setTaskList(updatedTasks);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!task.name) return;\n    setTask(\"\");\n    setTaskList([...taskList, { ...task }]);\n  };\n  useEffect(() => {\n    const ulist = JSON.parse(localStorage.getItem(\"users\"));\n    if (Array.isArray(ulist)) setTaskList(ulist);\n  }, []);\n  useEffect(() => {\n    if (taskList.length > 0)\n      localStorage.setItem(\"users\", JSON.stringify(taskList));\n  }, [taskList]);\n\n  return (\n    <form onSubmit={handleSubmit} style={{ margin: \"auto\", width: \"900px\" }}>\n      <h1>ToDo List</h1>\n\n      <label htmlFor=\"name\">My Tasks:</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        required=\"\"\n        onChange={handleChange}\n      />\n      <br />\n      <button\n        type=\"submit\"\n        style={{\n          backgroundColor: \"green\",\n          fontSize: \"20px\",\n          margin: \"20px\",\n          padding: \"10px\",\n        }}\n      >\n        Add TODO\n      </button>\n\n      <hr />\n      <ListTask items={taskList} handleRemove={handleRemove} />\n    </form>\n  );\n};\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}